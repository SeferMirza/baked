@REM Generated By GPT
@echo off
setlocal enabledelayedexpansion
title Project Runner

if "%1"=="" (
    echo Usage: %0 ^<command^>
    echo.
    echo Available commands: run, format, build, test, coverage, install
    exit /b 1
)

set CMD=%1

if /i "%CMD%"=="format" goto format
if /i "%CMD%"=="install" goto install
if /i "%CMD%"=="build" goto build
if /i "%CMD%"=="test" goto test
if /i "%CMD%"=="coverage" goto coverage
if /i "%CMD%"=="run" goto run

echo Invalid command: %CMD%
exit /b 1

:format
echo Formatting code...
cd core
dotnet format --verbosity normal
cd ..
cd ui
npm run lint -- --fix
cd ..
cd docs\.theme
npm run lint -- --fix
cd ..\..
goto end

:install
echo Installing dependencies...
cd docs\.theme && npm i && cd ..\..
cd ui && npm i && cd ..
cd core\test\Baked.Test.LoadTest && npm i && cd ..\..\..
cd core\test\Baked.Test.StubApi && npm i && cd ..\..\..
goto end

:build
echo Building projects...
cd core
dotnet build
cd ..
cd ui
npm run build
cd ..
goto end

:test
echo Running tests...
cd core
dotnet test --logger quackers
cd ..
cd ui
set BUILD_SILENT=1
npm test
cd ..
goto end

:coverage
echo Generating coverage report...
cd core
if exist .coverage rmdir /s /q .coverage
dotnet test -c Release --collect:"XPlat Code Coverage" --logger trx --results-directory .coverage --settings test\runsettings.xml
dotnet reportgenerator -reports:.coverage\*\coverage.cobertura.xml -targetdir:.coverage\html
start .coverage\html\index.html
cd ..
goto end

:run
echo (1) API (Development)
echo (2) UI (Development)
echo (3) Docker (Production)
echo (4) Docs
set /p choice="Please select 1-4: "

if "%choice%"=="1" goto api
if "%choice%"=="2" goto ui
if "%choice%"=="3" goto docker
if "%choice%"=="4" goto docs

:api
echo Running API (Development)...
dotnet run --project core\test\Baked.Test.Application
goto end

:ui
echo Starting Playground (Development)...
cd ui
npm run dev
cd ..
goto end

:docker
echo Running Docker (Production)...
docker compose up --build
goto end

:docs
echo Running Docs...
cd docs
make run
cd ..
goto end

:end
echo Done.
