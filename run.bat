@REM Generated By GPT
@echo off
setlocal enabledelayedexpansion
title Project Runner

:menu
echo.
echo ================================
echo         Project Runner
echo ================================
echo (1) Service (Development)
echo (2) UI (Development)
echo (3) Docker (Production)
echo (4) Docs
echo (5) Format
echo (6) Build
echo (7) Test
echo (8) Coverage
echo (9) Install dependencies
echo (0) Exit
echo ================================
echo.
set /p choice="Please select 0-9: "

if "%choice%"=="1" goto service
if "%choice%"=="2" goto ui
if "%choice%"=="3" goto docker
if "%choice%"=="4" goto docs
if "%choice%"=="5" goto format
if "%choice%"=="6" goto build
if "%choice%"=="7" goto test
if "%choice%"=="8" goto coverage
if "%choice%"=="9" goto install
if "%choice%"=="0" exit /b 0

echo Invalid choice!
pause
cls
goto menu

:: ---------------------------------
:service
cls
echo Running Service (Development)...
dotnet run --project core\test\Baked.Test.Application
goto end

:ui
cls
echo Starting Playground (Development)...
cd ui
npm run dev
cd ..
goto end

:docker
cls
echo Running Docker (Production)...
docker compose up --build
goto end

:docs
cls
echo Running Docs...
cd docs
if exist run.bat (
    call run.bat
) else (
    echo No run.bat found in docs folder.
)
cd ..
goto end

:format
cls
echo Formatting code...
cd core
dotnet format --verbosity normal
cd ..
cd ui
npm run lint -- --fix
cd ..
cd docs\.theme
npm run lint -- --fix
cd ..\..
goto end

:build
cls
echo Building projects...
cd ui
npm run build
cd ..
cd core
dotnet build
cd ..
goto end

:test
cls
echo Running tests...
cd core
dotnet test --logger quackers
cd ..
cd ui
set BUILD_SILENT=1
npm test
cd ..
goto end

:coverage
cls
echo Generating coverage report...
cd core
if exist .coverage rmdir /s /q .coverage
dotnet test -c Release --collect:"XPlat Code Coverage" --logger trx --results-directory .coverage --settings test\runsettings.xml
dotnet reportgenerator -reports:.coverage\*\coverage.cobertura.xml -targetdir:.coverage\html
start .coverage\html\index.html
cd ..
goto end

:install
cls
echo Installing dependencies...
cd docs\.theme && npm i && cd ..\..
cd ui && npm i && cd ..
cd core\test\Baked.Test.LoadTest && npm i && cd ..\..\..
cd core\test\Baked.Test.StubApi && npm i && cd ..\..\..
goto end

:end
echo.
pause
cls
goto menu
